searchState.loadedDescShard("n2o4", 0, "Safe, higher-level bindings to the APIs of cFE and OSAL, …\ncFE APIs.\nOSAL APIs.\nLow-level, <code>unsafe</code> bindings to the C APIs of cFE and OSAL.\nCreates a <code>const</code> <code>TableValidationFn</code><code>&lt;$t&gt;</code> from static function …\nUtility types, functions, etc.\nThe numeric type corresponding to a <code>Status</code>.\nExecutive service.\nEvent service.\nOperation failed.\nFile service.\nGeneric service.\nOperation not completed for non-error reasons, or …\nNot actually a cFE service; use this value for …\nA value that represents a reserved entry.\nAn ID to identify cFE-managed resources.\nSoftware Bus service.\nA status-code type often used as a return type in this …\nThe cFE service that generated a <code>Status</code>.\nThe severity part of a <code>Status</code>.\nOperation completed successfully.\nTable service.\nTime service.\nA value that represents an undefined/unused resource.\nReturns the status as a 32-bit number.\nReturns the status code.\nExecutive Services system.\nEvent system.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFile and filesystem utilities.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if a resource ID value is defined.\nReturns the mission-defined portion of the status.\nMessage utilities.\nConstructs a <code>Status</code> from its component parts.\nSoftware Bus system.\nReturns the cFE service that generated this status.\nReturns the status’s severity.\nTable system.\nTime Services system.\nA CDS block with that name already existed, with the same …\nApplication is exiting with an error.\nApplication wants to exit normally.\nAn identifier for cFE applications.\nApplication should continue to run.\nStartup apps have all completed early init, but are not …\nA handle to a block in the Critical Data Store (CDS).\nThe possible varieties of successful outcome of …\nIndication that the Core Application could not initialize.\nIndication that the Core Application had a runtime failure.\nCore is ready, starting external apps/libraries.\nCore apps are starting.\nNo CDS block with that name existed, and one was created.\nSingle-threaded mode while setting up CFE itself.\nNormal operation mode; all apps are running.\nA reset that causes all memory to be cleared.\nA reset that attempts to retain volatile disk, critical …\nThe type of cFE system reset desired in a call to <code>reset_cfe</code>…\nThe status (or requested status) of a cFE application.\nReserved for future use; all apps would be stopped.\nIndication that the system is requesting that the …\nApplication caused an exception.\nThe system is requesting a reload of the application.\nThe system is requesting a restart of the application.\nThe current state of the overall cFS system.\nFlags for task creation, as used by <code>create_child_task</code>.\nAn identifier for cFE tasks.\nA task priority; used for task scheduling.\nReserved value; should not be used.\nRetrieves the name of the CDS block.\nCopies <code>data_to_copy</code> into the CDS block.\nTries to create a new child task. If successful, runs …\nTries to create a new child task. See <code>create_child_task</code> …\nStops a cFE application, then deletes it from the cFE …\nExits from the current application.\nWhen called from a child task, causes the child task to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns (if successful) the application ID for the calling …\nIncrement ES’s internal counter for the current task.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>TaskPriority</code> with the given numerical …\nCreates a new <code>TaskFlags</code> with a default set of flags.\nLogs an entry/exit marker for a specified ID for use by …\nShortcut for <code>perf_log_add</code><code>(marker, 0)</code>.\nShortcut for <code>perf_log_add</code><code>(marker, 1)</code>.\nRequests that a block of memory be allocated from the CDS, …\nRequests that a block of memory be allocated from the CDS, …\nRequests that a block of memory be allocated from the CDS, …\nStops a cFE application, then loads and starts it using …\nImmediately resets the cFE core and all cFE applications.\nRestarts a single cFE application.\nFetches the contents of the CDS block.\nChecks for exit requests from the cFE system and possibly …\nReturns the numeric value of this <code>TaskPriority</code>.\nWaits for a minimum state of the overall cFS system, or a …\nWrites a message to the cFE System Log using a format …\nWrites a message to the cFE System Log using a format …\nWrites a message to the cFE System Log using a format …\nWrites a message to the cFE System Log using a format …\nWrites a message to the cFE System Log using a format …\nWrites a message to the cFE System Log using a format …\nWrites a message to the cFE System Log using a format …\nWrites a message to the cFE System Log using a format …\nWrites a message to the cFE System Log using a format …\nWrites the contents of a <code>str</code> to the cFE System Log.\nEvent-message filter definition for the binary filter …\nEvents that identify errors that are unrecoverable …\nEvents that are intended only for debugging, not nominal …\nEvents that identify an error but are not catastrophic.\nA marker type to ensure you <code>register</code> before sending events.\nThe classification of an event message, analogous to the …\nA scheme for filtering event messages so that not all get …\nEvents that identify a state change or action that is not …\nAn integer identifying the scheme in question.\nValues intended for use in the <code>Mask</code> field of <code>BinFilter</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegisters the application with event services.\nGenerates a software event using a format string and 0 …\nGenerates a software event using a format string and 1 …\nGenerates a software event using a format string and 2 …\nGenerates a software event using a format string and 3 …\nGenerates a software event using a format string and 4 …\nGenerates a software event using a format string and 5 …\nGenerates a software event using a format string and 6 …\nGenerates a software event using a format string and 7 …\nGenerates a software event using a format string and 8 …\nGenerates a software event using a <code>str</code> as the message.\nGenerates a software event (with the specified Application …\nGenerates a software event (with the specified Application …\nGenerates a software event (with the specified Application …\nGenerates a software event (with the specified Application …\nGenerates a software event (with the specified Application …\nGenerates a software event (with the specified Application …\nGenerates a software event (with the specified Application …\nGenerates a software event (with the specified Application …\nGenerates a software event (with the specified Application …\nGenerates a software event with the specified Application …\nGenerates a software event (with a specific time tag) …\nGenerates a software event (with a specific time tag) …\nGenerates a software event (with a specific time tag) …\nGenerates a software event (with a specific time tag) …\nGenerates a software event (with a specific time tag) …\nGenerates a software event (with a specific time tag) …\nGenerates a software event (with a specific time tag) …\nGenerates a software event (with a specific time tag) …\nGenerates a software event (with a specific time tag) …\nGenerates a software event with a specific time tag using …\nValue for <code>Mask</code>: every fourth event message is sent.\nValue for <code>Mask</code>: every other event message is sent.\nValue for <code>Mask</code>: sends two messages, filters out two, then …\nValue for <code>Mask</code>: only the first 16 event messages are sent.\nValue for <code>Mask</code>: only the first 32 event messages are sent.\nValue for <code>Mask</code>: only the first four event messages are …\nValue for <code>Mask</code>: only the first 64 event messages are sent.\nValue for <code>Mask</code>: only the first eight event messages are …\nValue for <code>Mask</code>: only the first event message is sent.\nValue for <code>Mask</code>: only the first two event messages are sent.\nValue for <code>Mask</code>: all event messages are sent (until the …\nCommand message.\nA command message for use with the cFE software bus.\nA <code>Message</code>’s function code.\nInvalid message type.\nAn instance of the common header for cFE software bus …\nThe type of a message.\nRepresents the size of a <code>Message</code>.\nA telemetry message for use with the cFE software bus.\nTelemetry message.\nReturns the <code>Message</code>’s function code (if it has one).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the message ID.\nTries to create a new command message, setting the message …\nTries to create a new telemetry message, setting the …\n<code>new</code> using <code>T::default()</code> as the payload.\n<code>new</code> using <code>T::default()</code> as the payload.\nReturns the payload of the message as a byte slice.\nThe message’s payload. As messages are copied …\nThe message’s payload. As messages are copied …\nSets the message’s function code.\nTries to set the message ID, provided doing so would not …\n<code>set_msgid</code> without the message-type check.\nSets the total size of the message this <code>Message</code> is the …\nReturns the total size of the message this <code>Message</code> is the …\nSets the <code>Message</code>’s time field to the current spacecraft …\nTransmits onto the software bus the message this <code>Message</code> …\nTransmits onto the software bus the header and first min(…\nTransmits onto the software bus the header and first min(…\nIf it makes sense to do so (the message is the right size, …\nIf it makes sense to do so (the message is the right size, …\nThe default QoS. Most applications should use this.\nHigh priority.\nHigh reliability.\nValue representing an invalid message ID.\nNormal priority level.\nNormal (best-effort) reliability.\nWait for the specified number of milliseconds.\nAn encoded message ID.\nThe numeric value of a message ID.\nWait forever for a message to arrive.\nA software bus pipe; an application needs one of these to …\nNon-blocking receive.\nQuality-of-service information for message subscriptions …\nMessage priority for off-system routing. Currently unused …\nMessage transfer reliability for off-instance routing. …\nA reserved value that will not match any valid message ID.\nHow long to wait for a new message if a pipe is empty.\nDeletes the software bus pipe.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether <code>self</code> is a valid message ID.\nReturns the message type this message ID corresponds to.\nConstructs a new QoS with the specified priority and …\nCreates a new pipe with space for <code>depth</code> yet-to-be-handled …\nReceives a message from the pipe.\nSubscribes to messages with ID <code>msg_id</code> on the software bus …\nSubscribes to messages with ID <code>msg_id</code> on the software bus …\nSubscribes to messages with ID <code>msg_id</code>, but keep the …\nRemoves the current pipe’s subscription to messages with …\nRemoves the current pipe’s subscription to messages with …\nCritical; the contents of the active table buffer will be …\nModifications to the table will use a reserved buffer …\nA table dump is pending.\nA handle to a dump-only table.\nDuplicate registration; table was already registered in a …\nUpdate the table using the table file at this filename.\nNormal successful registration.\nTable was registered, but not as a critical table (as was …\nNot critical; no copy of the table will be stored in the …\nA pending action for a table.\nTable was registered, and it has been initialized based on …\nUpdate the table to have the contents of the referred-to <code>T</code>.\nAlternative successful or partially-successful outcomes of …\nA handle to a table registered by another application.\nModifications to the table will use a shared memory space, …\nA convenience trait for referring to which types can be …\nA wrapped version of a static <code>fn</code> to verify that a table …\nOptions regarding buffer use on table modifications.\nOptions regarding whether a copy of the table is stored in …\nA handle to a table.\nThe characteristics of, and statistical information for, a …\nA source of table-update data for <code>TblHandle::load</code>.\nOptions available when registering a table using …\nAn update is pending.\nA validation is pending.\nThe CRC most recently calculated by Table Services from …\nFlag indicating whether a copy of the table contents is …\nFlag indicating whether table as a dedicated “inactive”…\nFlag indicating whether loads to the table are forbidden.\nCopies the contents of a dump-only table to a buffer.\nThe file creation time from the header of the last file …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempts to obtain the current address of the table …\nTries to obtain the current address of the table contents. …\nReturns characteristics of, and information about, the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFilename of the last file loaded into the table.\nThe time the table was last updated.\nTries to load the table with data from <code>source</code>.\nPerforms the standard operations to maintain the table …\nNotifies Table Services that this application has modified …\nInstructs Table Services to notify the calling application …\nThe number of applications with access to the table.\nTries to register a loadable table with cFE, returning a …\nTries to register a dump-only table (with optional …\nTries to obtain a handle to a table registered by another …\nSize of the table in bytes.\nReturns one of the pending actions required for the table, …\nFlag indicating whether the table has been loaded once or …\nUnregisters the table corresponding to this handle.\nUnregisters the table corresponding to this handle.\nUpdates the contents of the table image, if an update is …\nFlag indicating whether the table address was defined by …\nValidates the contents of the table image.\nAn increment in time, represented in seconds/subseconds.\nA system time value, represented as seconds/subseconds …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the current spacecraft time, using the epoch …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>microseconds</code> μs to units of cFE sub-seconds (2−…\nReturns the fractional number of seconds since the …\nReturns the fractional number of seconds in the time delta …\nCreates a new <code>SysTime</code> with the specified …\nCreates a new <code>DeltaTime</code> with the specified …\nReturns the number of whole seconds since the relevant …\nReturns the number of whole seconds in the time delta.\nConverts <code>subseconds</code> cFE sub-seconds (2−32 seconds) to …\nReturns the fractional number of seconds since the …\nReturns the fractional number of seconds in the time delta …\nThe maximum length of strings for names of many OSAL …\nAn instant in time.\nA time interval.\nFailed execution.\nAddress misalignment.\nError timeout.\nBad address.\nFile error.\nIncorrect object state.\nIncorrect object type.\nInvalid argument value (other than ID or size).\nInvalid ID.\nInvalid priority.\nInvalid Size.\nName not found.\nName taken.\nName length including null terminator greater than …\nNot implemented.\nNo free IDs.\nObject in use.\nRequested operation not support on supplied object(s).\nSize of output exceeds limit .\nSemaphore not full.\nStream disconnected.\nFS device not free.\nFS drive not created.\nFS name too long.\nFS path invalid.\nFS path too long.\nInvalid Interrupt number.\nInvalid pointer.\nInvalid semaphore value.\nQueue empty.\nQueue full.\nQueue ID error.\nQueue invalid size.\nQueue timeout.\nSemaphore failure.\nSemaphore timeout.\nTimer internal error.\nTimer invalid arguments.\nTimer ID error.\nTimer unavailable.\nAn identifier for an object managed by OSAL.\nError when trying to convert an <code>ObjectId</code> to a …\nAn error code, as returned by many OSAL API functions.\nAn object ID guaranteed never to refer to a valid resource.\nNumeric error code from OSAL.\nTypes and methods for interacting with files.\nReturns the fractional-seconds part of the time in …\nReturns the fractional-seconds part of the interval in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates the time with the specified (seconds, …\nCreates the interval with the specified (seconds, …\nCreates the time with the specified (seconds, …\nCreates the interval with the specified (seconds, …\nCreates the time with the specified (seconds, nanoseconds).\nCreates the interval with the specified (seconds, …\nCreates the time with the specified (seconds, subseconds).\nCreates the interval with the specified (seconds, …\nFile system-level APIs.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether <code>self</code> refers to a defined resource.\nReturns the fractional-seconds part of the time in …\nReturns the fractional-seconds part of the interval in …\nReturns the fractional-seconds part of the time in …\nReturns the fractional-seconds part of the interval in …\nReturns the fractional-seconds part of the time in …\nReturns the fractional-seconds part of the interval in …\nTypes and methods for interacting with network sockets.\nReturns the fractional-seconds part of the time in …\nReturns the fractional-seconds part of the interval in …\nSynchronization primitives.\nTask-related APIs.\nConverts the time into a count of microseconds.\nConverts the interval into a count of microseconds.\nConverts the time into a count of milliseconds.\nConverts the interval into a count of milliseconds.\nConverts the time into a count of nanoseconds.\nConverts the interval into a count of nanoseconds.\nConverts the time into a count of seconds.\nConverts the interval into a count of seconds.\nThe access mode a file should be opened with.\nSeek from the beginning of the file.\nIf the file doesn’t exist, create it.\nSeek from the current location in the file.\nSeek from the end of the file.\nA file handle.\nFlags for opening/creating a <code>File</code>.\nNo flags set.\nA wrapper for <code>File</code> that automatically closes its file …\nRead-only access.\nRead-write access.\nThe reference point for a seek offset.\nIf the file exists, truncate it on opening.\nWrite-only access.\nReturns the <code>ObjectId</code> for the file.\nCloses the file handle <code>self</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSeeks the file handle <code>self</code> to the specified location in …\nOpens a handle to a file, possibly creating the file if …\nLike <code>File::open_create</code>, but returning an <code>OwnedFile</code> on …\nReads up to <code>buf.len()</code> bytes from the file handle <code>self</code> into …\nWrites up to <code>buf.len()</code> bytes from <code>buf</code> to the file handle …\nThe maximum allowed length of an OSAL path name, including …\nTranslates an OSAL virtual file-system path to a path name …\nMarker type for sockets that have been bound to a local …\nMarker type for sockets that operate in a connection.\nMarker type for connectionless, message-oriented sockets.\nA network socket that has been created, but has yet to be …\nMarker type for IPv4 addresses and sockets.\nMarker type for IPv6 addresses and sockets.\nShut down the read direction of the session.\nShut down both directions of the session.\nA (network address, port) pair for use by socket-related …\nA network socket that is ready to send/receive data with a …\nA marker trait for network domains.\nInformation about a <code>Socket</code> or <code>EarlySocket</code>.\nA marker trait for the role a socket plays.\nThe possible shutdown modes for a stream connection.\nA marker trait for socket types.\nMarker type for connection-oriented, stream-of-bytes …\nShut down the write direction of the session.\nWaits for and accepts the next incoming connection on the …\nReturns the <code>ObjectId</code> for the socket.\nReturns the <code>ObjectId</code> for the socket.\nBinds the socket to the local address <code>addr</code>.\nIf the <code>Socket</code> hasn’t been <code>Clone</code>d, closes the socket.\nCloses the socket.\nConnects a socket to a peer at the remote address <code>addr</code>.\nTries to change the socket’s remote endpoint to <code>addr</code>, …\nThe task which opened the socket.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnconditionally creates an <code>EarlySocket</code> from an OSAL ID.\nUnconditionally creates a <code>Socket</code> from an OSAL ID, presumed …\nTries to write the address’s host address to <code>buf</code> as a …\nIf successful, returns information about the socket.\nIf successful, returns information about the socket.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe socket’s name.\nTries to initialize a <code>SockAddr</code> with the given domain, …\nOpens a socket with the given domain and type.\nReturns the address’s port number.\nReads up to <code>buf.len()</code> bytes from the connection into <code>buf</code>.\nReads a message from the bound datagram socket into <code>buf</code>.\nSends a message from the datagram socket to <code>remote_addr</code>, …\nTries to set the address’s host address from a C-style …\nSets the address’s port number.\nGracefully shuts down one or both directions of a stream …\nWrites up to <code>buf.len()</code> bytes from <code>buf</code> to the connection.\nA handle for a binary semaphore.\nThe properties associated with a <code>BinSem</code>.\nThe initial state of a semaphore.\nA handle for a counting semaphore.\nThe properties associated with a <code>CountSem</code>.\nEmpty state.\nFull state.\nA handle for a mutex semaphore.\nThe properties associated with a <code>MutSem</code>.\nA wrapper around a <code>BinSem</code> that automatically deletes it …\nA wrapper around a <code>CountSem</code> that automatically deletes it …\nA wrapper around a <code>MutSem</code> that automatically deletes it …\nReturns the <code>ObjectId</code> for the mutex.\nReturns the <code>ObjectId</code> for the mutex.\nReturns the <code>ObjectId</code> for the mutex.\nThe semaphore’s creator.\nThe semaphore’s creator.\nThe creator of the mutex.\nDeletes the binary semaphore.\nDeletes the counting semaphore.\nDeletes the mutex.\nIf a binary semaphore with the name <code>name</code> exists, returns …\nIf a counting semaphore with the name <code>name</code> exists, returns …\nIf a mutex with the name <code>name</code> exists, returns <code>Ok(Some(</code>a …\nUnblocks all tasks blocking on the semaphore without …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIncrements the semaphore value, waking up a blocked thread …\nIncrements the semaphore value, waking up a blocked thread …\nIf successful, returns details about the binary semaphore.\nIf successful, returns details about the counting …\nIf successful, returns details about the mutex.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempts to acquire the mutex, blocking until it does. …\nThe semaphore’s name.\nThe semaphore’s name.\nThe mutex’s name.\nAttempts to create a new binary semaphore with name <code>name</code>, …\nAttempts to create a new counting semaphore with name …\nTries to create a new mutex semaphore with default options;\nLike <code>BinSem::new</code>, but creates an owned semaphore instead.\nLike <code>CountSem::new</code>, but creates an owned semaphore instead.\nLike <code>MutSem::new</code>, but creates an owned semaphore instead.\nDecrements the semaphore value, blocking until it is …\nDecrements the semaphore value, blocking until it is …\nDecrements the semaphore value, blocking for up to …\nDecrements the semaphore value; if it is non-zero, waits …\nThe semaphore’s value.\nThe semaphore’s value.\nAn identifier for an OSAL task.\nAn OSAL task priority.\nInformation about an OSAL task.\nReturns the <code>ObjectId</code> for the task.\nTries to find an OSAL task given its name.\nThe task’s creator.\nStops execution of this task for <code>millis</code> milliseconds.\nDeletes the task.\nExits the current task.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the task ID for the current task if successful.\nReturns information about the task.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe task’s name.\nThe task’s priority.\nSets the priority of the task.\nThe size of the task’s stack.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn owned null-terminated C-compatible string of at most …\nThe maximum possible <code>NegativeI32</code>.\nThe minimum possible <code>NegativeI32</code>.\nA wrapper for <code>i32</code> that guarantees its value is always …\nError: an attempt was made to convert a non-negative value …\nA type for which no values can possibly exist.\nReturns a reference to the underlying array.\nReturns the value of <code>self</code> as an <code>i32</code>.\nReturns a pointer to the start of the string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>CStrBuf&lt;SIZE&gt;</code> from the string <code>src</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf <code>n</code> is negative, returns a <code>NegativeI32</code> with value <code>n</code>.\nCreates a new <code>CStrBuf&lt;SIZE&gt;</code> from <code>src</code>; if <code>src</code> is longer …\nCreates a new <code>CStrBuf&lt;SIZE&gt;</code> using <code>src</code>.\nIf <code>n</code> is negative, returns a <code>NegativeI32</code> with value <code>n</code>.\nCreates a new <code>CStrBuf&lt;SIZE&gt;</code> from <code>src</code>, handling conversion …")