# This toolchain file describes the cross compiler to use for
# the target architecture indicated in the configuration file.
#
# This is an example, derived from a working toolchain-*.cmake,
# shows the additions needed for Rust-based applications using
# the `n2o4` crate. In the example, the target is a Zynq 7000
# processor (two ARM Cortex-A9 cores); linking and C compilation
# are provided by a Yocto-generated eSDK.

# Basic cross system configuration
SET(CMAKE_SYSTEM_NAME           Linux)
SET(CMAKE_SYSTEM_VERSION        1)
SET(CMAKE_SYSTEM_PROCESSOR      arm)

SET(SDK_DIR "/opt/yocto-arm-esdk")

SET(SDK_ROOT "${SDK_DIR}/sysroots")
SET(SDK_BINDIR "${SDK_ROOT}/x86_64-unknown-linux/usr/bin/arm-linux-gnueabi")

SET(SDK_COMPILER_FLAGS -march=armv7-a -marm -mfpu=neon -mfloat-abi=hard -mcpu=cortex-a9 --sysroot=${SDK_ROOT}/cortexa9hf-neon-linux-gnueabi)

# Specify the cross compiler executables
SET(CMAKE_C_COMPILER   "${SDK_BINDIR}/arm-linux-gnueabi-gcc" ${SDK_COMPILER_FLAGS})
SET(CMAKE_CXX_COMPILER "${SDK_BINDIR}/arm-linux-gnueabi-g++" ${SDK_COMPILER_FLAGS})

SET(CMAKE_C_FLAGS   "-O2 -pipe -g -feliminate-unused-debug-types")
SET(CMAKE_CXX_FLAGS "-O2 -pipe -g -feliminate-unused-debug-types")

SET(CMAKE_SYSROOT "${SDK_ROOT}/cortexa9hf-neon-linux-gnueabi")
SET(CMAKE_FIND_ROOT_PATH "${CMAKE_SYSROOT}")

# Configure the find commands
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM   NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY   ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE   ONLY)

# These variable settings are specific to cFE/OSAL and determines which 
# abstraction layers are built when using this toolchain
SET(CFE_SYSTEM_PSPNAME      "pc-linux")
SET(OSAL_SYSTEM_BSPNAME     "pc-linux")
SET(OSAL_SYSTEM_OSTYPE      "posix")

# The following variables are needed for compiling Rust-based applications
# using the build system setup recommended when using this crate.

SET(RUST_TARGET "armv7-unknown-linux-gnueabihf")
SET(RUST_CC_CFLAGS ${SDK_COMPILER_FLAGS})
SET(RUST_BINDGEN_CFLAGS
  ${SDK_COMPILER_FLAGS}
  "-I${SDK_ROOT}/x86_64-unknown-linux/usr/lib/arm-linux-gnueabi/gcc/arm-linux-gnueabi/7.3.0/include"
  "-I${SDK_ROOT}/x86_64-unknown-linux/usr/lib/arm-linux-gnueabi/gcc/arm-linux-gnueabi/7.3.0/include-fixed"
  "-I${SDK_ROOT}/cortexa9hf-neon-linux-gnueabi/usr/lib/gcc/arm-linux-gnueabi/7.3.0/include"
  "-Wno-error=gnu-include-next"
)
